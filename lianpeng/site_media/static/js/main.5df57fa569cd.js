(function(){var j;$(".search").submit(function(){var n=$(this).find(".query").val();var m=$(this).attr("action")+n;if(j){j.navigate(m,{trigger:true})}else{window.location.href=m}return false});$("#feedback .confirm").click(function(){if($(this).hasClass("disabled")){return false}$(this).addClass("disabled");var n=$("#feedback textarea").val();var m={text:n};m=JSON.stringify(m);$.ajax({url:"/api/v1/feedback/",data:m,type:"POST",contentType:"application/json",dataType:"application/json"}).complete(function(){$("#feedback textarea").hide();$("#feedback .success").show()});return false});$("#feedback").on("hidden",function(){$("#feedback textarea").val("");$("#feedback .confirm").removeClass("disabled");$("#feedback textarea").show();$("#feedback .success").hide()});F={fetch_title:function(m,n){$.post("/harvest/pageinfo/",{url:m},n)},url_domain:function(n){var m=document.getElementById("url-template");m.href=n;var o=m.hostname;if(m.port&&m.port!=80){o+=":"+m.port}return o},form2json:function(n){var p={};var m=$(n).serializeArray();$.each(m,function(){if(p[this.name]!==undefined){if(!p[this.name].push){p[this.name]=[p[this.name]]}p[this.name].push(this.value||"")}else{p[this.name]=this.value||""}});return p},show_paginator:function(m,o,p){var n=m;if(n.collection.total_count>n.collection.paginationConfig.ipp){n.$(".paginator").pagination({total_pages:Math.ceil(n.collection.total_count/n.collection.paginationConfig.ipp),current_page:n.collection.currentPage,display_max:o,callback:function(q,r){p();n.collection.loadPage(r)}}).show()}else{n.$(".paginator").hide()}}};$.fn.spin=function(m){this.each(function(){var o=$(this),n=o.data();if(n.spinner){n.spinner.stop();delete n.spinner}if(m!==false){n.spinner=new Spinner($.extend({color:o.css("color")},m)).spin(this)}});return this};var h="/api/v1/user/"+USER_ID;var b=Backbone.Model.extend({urlRoot:"/api/v1/bookmark/"});var a=Backbone.Collection.extend({parse:function(m){this.total_count=m.meta.total_count;return m.objects}});var l=Backbone.Model.extend({urlRoot:"/api/v1/list/"});var i=l.extend({});var g=a.extend({model:l,initialize:function(){Backbone.Pagination.enable(this,{page_attr:"offset",ipp:100,ipp_attr:"limit"})},baseUrl:"/api/v1/list/"});var e=Backbone.View.extend({events:{"click .list-name":"redirect"},initialize:function(){var m=this;this.model.bind("destroy",this.delete_model,this);this.model.bind("change",this.change_name,this);this.$el.droppable({accept:".bookmark-entry-box",tolerance:"pointer",drop:_.bind(function(p,q){var o=$(p.target);var n=$(q.draggable).data("id");var r=$(q.draggable).data("list-id");m.trigger("dropped",r,n,m.model);$(q.draggable).remove()},this),over:_.bind(function(o,p){var n=$(o.target);if(n.hasClass("active")){n.addClass("source")}else{n.addClass("active")}},this),out:_.bind(function(o,p){var n=$(o.target);if(!n.hasClass("source")){n.removeClass("active")}},this)})},delete_model:function(){this.remove();$("#all-list .list-name").click()},redirect:function(){var m=USER_NAME+"/list/"+this.model.id;if(Backbone.history.fragment==m){Backbone.history.fragment=null}Backbone.history.navigate(m,true)},render:function(){var o=this.model;var n=$("#list-bookmarks-tmpl").html();var m=_.template(n,{list:o.toJSON()});$("#bookmarks").html(m);$("#bookmarks").spin();this.bookmarks=new Bookmarks({list:this.model});this.bookmarks.bind("reset",this.stop_spin,this);this.model.bookmarks=this.bookmarks;this.bookmarks_view=new BookmarksView({collection:this.bookmarks,el:"#bookmarks #list-bookmarks-"+this.model.id+" .bookmarks",list:this.model});this.bookmarks.fetch();this.list_setting_view=new c({el:"#bookmarks #list-bookmarks-"+this.model.id+" .list-header",model:this.model});$("#lists li").removeClass("active");this.$el.addClass("active")},stop_spin:function(){$("#bookmarks").spin(false)},change_name:function(){this.$(".list-name .name-text").text(this.model.get("name"))}});var k=e.extend({initialize:function(){}});var f=e.extend({render:function(){e.prototype.render.call(this);$(".add-bookmark-form-box").hide();$(".list-setting-box").hide()}});var d=f.extend({});var c=Backbone.View.extend({events:{"click .delete-list":"delete_list","click .list-edit-modal .save":"update","submit .list-edit-modal form":"update","click .edit-list":"edit"},change_name:function(){this.$(".list-name").text(this.model.get("name"))},initialize:function(){this.model.bind("change",this.change_name,this)},delete_list:function(){this.model.destroy()},edit:function(){this.$(".list-edit-modal").modal()},update:function(){this.$(".list-edit-modal").modal("hide");var m=this.$(".list-edit-modal form");var n=F.form2json(m);if(!("public" in n)){n["public"]=false}this.model.save(n);return false}})}).call(this);